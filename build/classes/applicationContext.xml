<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	
	<!-- 配置自动扫描的包 -->
	<context:component-scan base-package="cn.com.zlqf.airservice">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"
			/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"
			/>
	</context:component-scan>
	
	<!-- 配置数据源 -->
	<context:property-placeholder location="classpath:db.properties" />
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		<!--连接池中保留的最大连接数。默认值: 15 -->
		<property name="maxPoolSize" value="30"/>
		<!-- 连接池中保留的最小连接数，默认为：3-->
		<property name="minPoolSize" value="10"/>
		<!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3-->
		<property name="initialPoolSize" value="10"/>
	</bean>
	
	<!-- 配置 JPA 的 EntityManagerFactory -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource">
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
			</bean>
		</property>
		<property name="packagesToScan" value="cn.com.zlqf.airservice">
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
			</props>
		</property>
	</bean>
	
	<!-- 配置事务 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory">
		</property>
	</bean>
	
	<!-- 配置支持基于注解的事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 配置 SpringData -->
	<jpa:repositories base-package="cn.com.zlqf.airservice" entity-manager-factory-ref="entityManagerFactory">
	</jpa:repositories>
	
	
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="200" />
		<property name="maxIdle" value="50" />
		<property name="minIdle" value="10" />
		<property name="testOnBorrow" value="true" />
	</bean>
	
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<!-- constructor-arg ref="sentinelConfiguration"/ -->
		<property name="hostName" value="192.168.0.6" />
		<property name="port" value="6379" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>
	<!-- redis sentinel配置 <bean id="sentinelConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
		<property name="master"> <bean class="org.springframework.data.redis.connection.RedisNode">
		<property name="name" value="mymaster"></property> </bean> </property> <property
		name="sentinels"> <set> <bean class="org.springframework.data.redis.connection.RedisNode">
		<constructor-arg name="host" value="10.108.1.10"></constructor-arg> <constructor-arg
		name="port" value="36379"></constructor-arg> </bean> <bean class="org.springframework.data.redis.connection.RedisNode">
		<constructor-arg name="host" value="10.108.1.3"></constructor-arg> <constructor-arg
		name="port" value="46379"></constructor-arg> </bean> </set> </property> </bean>
		-->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		>
		<property name="connectionFactory" ref="jedisConnectionFactory"/>
	</bean>
	
</beans>
